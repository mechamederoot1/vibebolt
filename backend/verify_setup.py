#!/usr/bin/env python3
"""
Script para verificar se o setup est√° correto
"""

def verify_imports():
    """Verificar se todas as importa√ß√µes est√£o funcionando"""
    print("üîç Verificando importa√ß√µes...")
    
    try:
        # Testar importa√ß√µes b√°sicas
        from fastapi import FastAPI
        print("‚úÖ FastAPI OK")
        
        from sqlalchemy import create_engine
        print("‚úÖ SQLAlchemy OK")
        
        # Testar importa√ß√£o dos models
        from models import Base, MediaFile, Album
        print("‚úÖ Models OK")
        
        print("\nüéâ Todas as importa√ß√µes est√£o funcionando!")
        return True
        
    except ImportError as e:
        print(f"‚ùå Erro de importa√ß√£o: {e}")
        return False
    except Exception as e:
        print(f"üí• Erro inesperado: {e}")
        return False

def verify_main():
    """Verificar se main.py pode ser importado"""
    print("\nüîç Verificando main.py...")
    
    try:
        # Tentar importar main sem executar
        import importlib.util
        spec = importlib.util.spec_from_file_location("main", "main.py")
        if spec and spec.loader:
            print("‚úÖ main.py pode ser carregado")
            return True
        else:
            print("‚ùå main.py n√£o pode ser carregado")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao verificar main.py: {e}")
        return False

def main():
    """Fun√ß√£o principal de verifica√ß√£o"""
    print("üöÄ VERIFICA√á√ÉO COMPLETA DO SETUP")
    print("=" * 40)
    
    # Limpar cache primeiro
    import os
    import shutil
    for root, dirs, files in os.walk('.'):
        if '__pycache__' in dirs:
            shutil.rmtree(os.path.join(root, '__pycache__'), ignore_errors=True)
    print("üßπ Cache limpo")
    
    success_count = 0
    total_tests = 2
    
    if verify_imports():
        success_count += 1
    
    if verify_main():
        success_count += 1
    
    print("\n" + "=" * 40)
    if success_count == total_tests:
        print("üéâ SETUP VERIFICADO COM SUCESSO!")
        print("‚úÖ Pronto para executar: python main.py")
        return True
    else:
        print(f"‚ö†Ô∏è VERIFICA√á√ÉO PARCIAL ({success_count}/{total_tests})")
        print("Verifique os erros acima")
        return False

if __name__ == "__main__":
    main()
