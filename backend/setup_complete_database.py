#!/usr/bin/env python3
"""
Script master para configurar completamente o banco de dados da rede social
Executa cria√ß√£o de estrutura + sistema de qualidade de m√≠dia
"""
import os
import sys
import subprocess
from pathlib import Path

def run_script(script_name, description):
    """Executar um script Python e capturar resultado"""
    print(f"\nüöÄ Executando: {description}")
    print("=" * 60)
    
    try:
        # Executar o script
        result = subprocess.run([
            sys.executable, script_name
        ], capture_output=True, text=True, cwd=Path(__file__).parent)
        
        # Mostrar output
        if result.stdout:
            print(result.stdout)
        
        if result.stderr:
            print("‚ö†Ô∏è Avisos/Erros:")
            print(result.stderr)
        
        if result.returncode == 0:
            print(f"‚úÖ {description} - CONCLU√çDO COM SUCESSO")
            return True
        else:
            print(f"‚ùå {description} - FALHOU")
            return False
            
    except Exception as e:
        print(f"üí• Erro ao executar {script_name}: {e}")
        return False

def main():
    """Executar setup completo do banco de dados"""
    
    print("üéØ SETUP COMPLETO DO BANCO DE DADOS DA REDE SOCIAL")
    print("=" * 60)
    print("Este script ir√°:")
    print("1. Criar toda a estrutura de tabelas")
    print("2. Configurar sistema de qualidade de m√≠dia")
    print("3. Otimizar performance")
    print("4. Configurar √≠ndices e views")
    print("=" * 60)
    
    # Confirmar execu√ß√£o
    response = input("\nü§î Continuar com o setup? (y/N): ").strip().lower()
    if response != 'y':
        print("‚èπÔ∏è Setup cancelado pelo usu√°rio.")
        return False
    
    success_count = 0
    total_scripts = 2
    
    # 1. Criar estrutura do banco
    if run_script("create_database_structure.py", "Cria√ß√£o da estrutura do banco"):
        success_count += 1
    
    # 2. Configurar sistema de m√≠dia
    if run_script("setup_media_quality.py", "Sistema de qualidade de m√≠dia"):
        success_count += 1
    
    # Resultado final
    print("\n" + "=" * 60)
    if success_count == total_scripts:
        print("üéâ SETUP COMPLETO REALIZADO COM SUCESSO!")
        print("=" * 60)
        print("\n‚úÖ O que foi configurado:")
        print("üìä 16 tabelas principais criadas")
        print("üì∏ Sistema de m√≠dia com m√∫ltiplas qualidades")
        print("üé® Configura√ß√µes de qualidade para cada tipo")
        print("‚ö° √çndices de performance otimizados")
        print("üëÄ Views √∫teis para consultas")
        print("üîç Sistema de metadados avan√ßado")
        
        print("\nüöÄ Sua rede social est√° pronta para:")
        print("‚Ä¢ Upload de fotos de perfil em alta qualidade")
        print("‚Ä¢ Fotos de capa otimizadas")
        print("‚Ä¢ Posts com imagens/v√≠deos")
        print("‚Ä¢ Stories tempor√°rios")
        print("‚Ä¢ Sistema de coment√°rios")
        print("‚Ä¢ Rea√ß√µes estilo Facebook")
        print("‚Ä¢ Chat privado e em grupo")
        print("‚Ä¢ Notifica√ß√µes em tempo real")
        print("‚Ä¢ √Ålbuns organizados")
        print("‚Ä¢ Sistema de amizades completo")
        
        print(f"\nüìã Pr√≥ximos passos:")
        print("1. Execute sua aplica√ß√£o: python main.py")
        print("2. Teste o upload de imagens")
        print("3. Configure processamento de m√≠dia se necess√°rio")
        
        return True
    else:
        print(f"‚ö†Ô∏è SETUP PARCIALMENTE CONCLU√çDO ({success_count}/{total_scripts})")
        print("Verifique os erros acima e execute novamente se necess√°rio.")
        return False

if __name__ == "__main__":
    try:
        success = main()
        sys.exit(0 if success else 1)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è Setup interrompido pelo usu√°rio")
        sys.exit(1)
    except Exception as e:
        print(f"\nüí• Erro fatal: {e}")
        sys.exit(1)
